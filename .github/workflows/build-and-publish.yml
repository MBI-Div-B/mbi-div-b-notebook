# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:
    branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME_1: mbi-div-b-notebook-base
  IMAGE_NAME_2: mbi-div-b-notebook-cuda
jobs:
  push_to_registry:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker 1st image
        id: meta1
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME_1 }}

      - name: Build and push 1st Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: ${{ env.IMAGE_NAME_1 }}
          file: ${{ env.IMAGE_NAME_1 }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta1.outputs.tags }}
          labels: ${{ steps.meta1.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker 2nd image
        id: meta2
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME_2 }}

      - name: Build and push 2nd Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: ${{ env.IMAGE_NAME_2 }}
          build-args: |
            BASE_REPO=${{ github.repository_owner }}
            REGISTRY=${{ env.REGISTRY }}
            }}
          file: ${{ env.IMAGE_NAME_2 }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta2.outputs.tags }}
          labels: ${{ steps.meta2.outputs.labels }}
